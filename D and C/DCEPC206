#include<bits/stdc++.h>
using namespace std;
#define faster cin.tie(0);ios_base::sync_with_stdio(0)
#define ll long long
#define MOD (int)(1e9+7)


const int maxn=1e5+2;

ll tree[maxn];
ll arr[maxn];
ll compress[maxn];
int t,n;


void update(int index,int  val) 
{ 
    while (index <=n) 
    { 
		tree[index] += val; 
		index += index & (-index); 
    } 
} 

ll sum(int index)
{
	ll sum=0;
	while (index>0) 
    { 
        sum += tree[index]; 
        index -= index & (-index); 
    } 
    return sum; 
}



int main()
{
       
      
      cin>>t;
      
      while(t--)
      {
      		memset(tree,0,sizeof(tree));
      		cin>>n;
      		for(int i=0;i<n;i++) 
      		{
      			cin>>arr[i];
      			compress[i]=arr[i];
      		}
      		sort(arr,arr+n);
      		
      		for(int i=0;i<n;i++)
      		{
      			compress[i]=lower_bound(arr,arr+n,compress[i])-arr+1;
      		}
      		
      		
      		ll ans=0;
      		for(int i=0;i<n;i++)
      		{
      			ans+=sum(compress[i]-1);
      			update(compress[i],arr[compress[i]-1]);
      		}
      		cout<<ans<<endl;
      		
      }
      
      
      
      
      
      
      
      
      
      
}
