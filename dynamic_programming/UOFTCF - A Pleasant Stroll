#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(0);
using namespace std;

typedef pair<int,int> pii;
typedef long long ll;


const int N = 51;
string arr[N];
int dp[N][N][N];
int n,m;





int find(int r,int c1,int c2)
{
	if(r==n) return 0;
	if( c1<0 || c1>=m || c2<0 || c2>=m || c1==c2 || arr[r][c1]=='#' || arr[r][c2]=='#') return -100;
	if(dp[r][c1][c2]!=-1) return dp[r][c1][c2];
	

	int ans=-100;
	
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1,c2));
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1,c2-1));
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1,c2+1));
	
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1-1,c2));
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1-1,c2-1));
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1-1,c2+1));
	
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1+1,c2));
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1+1,c2-1));
	ans=max(ans,(abs(c1-c2) == 1)+find(r+1,c1+1,c2+1));
	
	return dp[r][c1][c2]=ans;
	// return ans;
}





int main() {

  ios::sync_with_stdio(false);	
  cin.tie(NULL);
  int t;
  cin >> t;
 
  while(t--) 
  {
  		memset(dp,-1,sizeof(dp));
		cin>>n>>m;
		
		for(int i=0;i<n;i++) cin>>arr[i];
	
		int ans=-100;
		
	
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<m;j++)
			{
				ans=max(ans,find(0,i,j));
			}
		}
		
		
		if(ans>=0) cout<<ans<<endl;
		else cout<<"Detour"<<endl;
		
  }
    return 0;
}
