#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(0);
using namespace std;

typedef pair<int,int> pii;
typedef long long ll;


const int rows =10025;
const int cols =11;

ll arr[rows][cols];
ll dp[rows][cols][cols];

int n,m;

ll find(int r,int c1,int c2)
{
	if(r==n-1) 
	{
		if(c1==0 && c2==m-1)
		{
			return arr[r][c1]+arr[r][c2]-(c1==c2)*arr[r][c1];
		}
		return INT_MIN;
	}
	if( c1<0 || c1>=m || c2<0 || c2>=m || c1==c2 ) return INT_MIN;
	if(dp[r][c1][c2]!=-1) return dp[r][c1][c2];
	

	ll ans=INT_MIN;;
	
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1,c2)));
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1,c2-1)));
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1,c2+1)));
	
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1-1,c2)));
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1-1,c2-1)));
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1-1,c2+1)));
	
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1+1,c2)));
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1+1,c2-1)));
	ans=max(ans,(((abs(c1-c2) == 0) ? arr[r][c1] : arr[r][c1]+arr[r][c2]) + find(r+1,c1+1,c2+1)));
	
	return dp[r][c1][c2]=ans;
	// return ans;
}





int main() {

  ios::sync_with_stdio(false);	
  cin.tie(NULL);
  int t; t=1;
  //cin >> t;
 
  while(t--) 
  {
  		memset(dp,-1,sizeof(dp));
		cin>>n>>m;
		
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				cin>>arr[i][j];
			}
		}
		cout<<find(0,0,m-1);
  }
    return 0;
}
