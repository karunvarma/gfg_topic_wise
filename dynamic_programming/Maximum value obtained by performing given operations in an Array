// C++ program to merge a linked list into another at  
// alternate positions  
#include <bits/stdc++.h> 
using namespace std; 
  
  
  

int findMax(int *arr,int n)
{
	int dp[n][2];
	memset(dp,0,sizeof(dp));
	
	
	// dp[i][0]  represents we perfom  (arr[i]+arr[i+1])
	// dp[i][1]  represents we perfom  (arr[i]*arr[i+1])
	
	dp[0][0]=arr[0]+arr[1];
	dp[0][1]=arr[0]*arr[1];
	
	
	for(int i=1;i<=n-2;i++)
	{
		
		//  if we want to perform at current int
		dp[i][0]=max(dp[i-1][0],dp[i-1][1])+arr[i+1];
		
		// if multiply
		dp[i][1]=arr[i]*arr[i+1]+dp[i-1][0]-arr[i];
		
	}
	
	return max(dp[n-2][0],dp[n-2][1]);
	
}
  


int main() 
{ 
    int arr[] = { 5, -1, -5, -3, 2, 9, -4 }; 
    cout<<findMax(arr, 7); 
} 
