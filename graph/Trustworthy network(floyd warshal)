#include<bits/stdc++.h>
using namespace std;
#define faster cin.tie(0);ios_base::sync_with_stdio(0)
#define ll long long


const int mx=301;
int const INF = 1 << 30;
long a[mx][mx];
long b[mx][mx];

int main()
{
    faster;

    int n,m,s,e; cin>>n>>m>>s>>e;
    s--;e--;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            a[i][j] = INF;
        }
        a[i][i] = 0;
    }
  

   
    // uni directional edges
    for(int i=0;i<m;i++)
    {
        int u,v,w; cin>>u>>v>>w;
        u--;v--;
        a[u][v]=w;
    }

      for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
            {
                b[i][j]=a[i][j];
            }

    // forward
    for(int k=0;k<n;k++)
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
            {
                if( b[i][k]==INF || b[k][j]==INF ) continue;
                b[i][j]=min(b[i][j],b[i][k]+b[k][j]);
            }

    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
        {
            // edges from i--->j and j--->i
            if(b[j][i]!=INF && a[i][j]!=INF) a[i][j]+=b[j][i];
            else a[i][j]=INF;  
        }

     for(int k=0;k<n;k++)
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
            {
                if( a[i][k]==INF || a[k][j]==INF ) continue;
                a[i][j]=min(a[i][j],a[i][k]+a[k][j]);
            }

      cout<<(a[s][e]==INF?-1:a[s][e])<<endl;
    

   

    return 0;
}
