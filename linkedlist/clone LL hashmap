/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/
class Solution {
public:
    Node* copyRandomList(Node* head) {
        
        unordered_map<Node*,Node*> mp;
        Node* clonehead=NULL;
        
        Node* temp=head;
        
        while(temp!=NULL)
        {
            Node* newNode=new Node(temp->val);
            
            // original-->clone
            mp[temp]=newNode;
            
            // advance to next;
            temp=temp->next;
        }
        
        temp=head;
        
        while(temp!=NULL)
        {
            Node* clonenode=mp[temp];
            
            // link the randome node
            clonenode->random=mp[temp->random];
            
            // link the next node for clone node;
            clonenode->next=mp[temp->next];
                
            
            // advace to next;
            temp=temp->next;
        }
        
        clonehead=mp[head];
        
        
        return clonehead;
        
    }
};
